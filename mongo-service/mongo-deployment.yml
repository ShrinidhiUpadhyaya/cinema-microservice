apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-root-password
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: init-data
          mountPath: /data/mockData
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: mongo-pvc
      - name: init-data
        configMap:
          name: mongo-data
          items:
          - key: cinemas.json
            path: cinemas.json
          - key: cities.json
            path: cities.json
          - key: countries.json
            path: countries.json
          - key: movies.json
            path: movies.json
          - key: states.json
            path: states.json
      - name: init-script
        configMap:
          name: mongo-init-script
